<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>For Comprehension on Learning Publicly</title>
    <link>https://fares.codes/tags/for-comprehension/</link>
    <description>Recent content in For Comprehension on Learning Publicly</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 29 Jul 2019 21:37:00 +0000</lastBuildDate><atom:link href="https://fares.codes/tags/for-comprehension/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>For Comprehensions Demystified</title>
      <link>https://fares.codes/posts/for-comprehensions-demystified/</link>
      <pubDate>Mon, 29 Jul 2019 21:37:00 +0000</pubDate>
      
      <guid>https://fares.codes/posts/for-comprehensions-demystified/</guid>
      <description>A For Comprehension is a syntactic sugar for using a composition of map, flatMap and filter.
At first glance it might look complicated and difficult to comprehend. But once you get the hang of it, you&amp;rsquo;ll realise it&amp;rsquo;s a cool card to have up your sleeve, one that will surely make your code much more readable.
 Lets look at the below couple functions:
def computeA(a: Int): Either[Throwable, Int] = ?</description>
    </item>
    
  </channel>
</rss>
