<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unit testing on Learning Publicly</title>
    <link>https://fares.codes/tags/unit-testing/</link>
    <description>Recent content in unit testing on Learning Publicly</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 28 Feb 2021 19:20:00 +0200</lastBuildDate><atom:link href="https://fares.codes/tags/unit-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Property Based Testing with ScalaCheck</title>
      <link>https://fares.codes/posts/property-based-testing-with-scalacheck/</link>
      <pubDate>Sun, 28 Feb 2021 19:20:00 +0200</pubDate>
      
      <guid>https://fares.codes/posts/property-based-testing-with-scalacheck/</guid>
      <description>Unit testing is an effective way of catching bugs and protecting our code from future bugs related to refactoring.
But with the classical unit tests (example based tests), we are restricted to the test cases we can think ok. We can only write a finite number of tests that cover a finite number of cases.
In this article I&amp;rsquo;ll begin by showing the limitations of example based tests before moving to scalacheck and property based testing.</description>
    </item>
    
  </channel>
</rss>
