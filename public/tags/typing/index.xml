<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>typing on Learning Publicly</title>
    <link>https://fares.codes/tags/typing/</link>
    <description>Recent content in typing on Learning Publicly</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 13 Sep 2020 14:08:00 +0200</lastBuildDate>
    
	<atom:link href="https://fares.codes/tags/typing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resolving Circular Dependencies Due to Type Hinting</title>
      <link>https://fares.codes/posts/resolving-circular-dependencies-due-to-type-hinting/</link>
      <pubDate>Sun, 13 Sep 2020 14:08:00 +0200</pubDate>
      
      <guid>https://fares.codes/posts/resolving-circular-dependencies-due-to-type-hinting/</guid>
      <description>In a previous article, I&amp;rsquo;ve talked about type hinting and its usefulness. However I recently realized that while using typing and defining custom types, one can easily find oneself in a circular dependency loop.
Here&amp;rsquo;s a case scenario:
root | custom_types.py my_function.py custom_types is the module in which we define all custom types used in my_function.py
my_function is the module in which we define all functions.
So it&amp;rsquo;s clear that my_function will depend on our custom_types.</description>
    </item>
    
    <item>
      <title>Type Hinting in Python</title>
      <link>https://fares.codes/posts/type-hinting-in-python/</link>
      <pubDate>Mon, 29 Jun 2020 00:05:00 +0200</pubDate>
      
      <guid>https://fares.codes/posts/type-hinting-in-python/</guid>
      <description>As I turn 24, my blog is about to turn 1 year old!! ðŸŽŠ
This article will mostly be a summary of the official python documentation. I have found it useful to read a documentation and then re-summarize it in my own words. (Examples are mostly theirs though)
Typing is a new module starting python 3.5 and introduced by PEP 484. Its goal is to introduce static types to Python.</description>
    </item>
    
  </channel>
</rss>