<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unapply on Learning Publicly</title>
    <link>https://fares.codes/tags/unapply/</link>
    <description>Recent content in Unapply on Learning Publicly</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Aug 2019 10:10:00 +0000</lastBuildDate>
    
	<atom:link href="https://fares.codes/tags/unapply/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Un-Apply in Scala</title>
      <link>https://fares.codes/posts/un-apply-in-scala/</link>
      <pubDate>Fri, 02 Aug 2019 10:10:00 +0000</pubDate>
      
      <guid>https://fares.codes/posts/un-apply-in-scala/</guid>
      <description>Unapply in Scala is the inverse of the apply&amp;hellip; (queue no shit comments :p)
So what does it do exactly? given a class Person:
case class Person(name: String, age: Int, hobbies: List[String]) If we wanted to decompose the class person into a set of attributes:
 name: String age: Int hobbies: List[String]  We would use the unapply. the return type of the unapply is an Option of a tuple with the values inside the tuple representing the values we seek to retrieve.</description>
    </item>
    
  </channel>
</rss>