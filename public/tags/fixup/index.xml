<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fixup on Learning Publicly</title>
    <link>https://fares.codes/tags/fixup/</link>
    <description>Recent content in fixup on Learning Publicly</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 03 Sep 2019 20:55:00 +0000</lastBuildDate><atom:link href="https://fares.codes/tags/fixup/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Interactive Rebase for a Cleaner Git Commit History</title>
      <link>https://fares.codes/posts/interactive-rebase-for-a-cleaner-git-commit-history/</link>
      <pubDate>Tue, 03 Sep 2019 20:55:00 +0000</pubDate>
      
      <guid>https://fares.codes/posts/interactive-rebase-for-a-cleaner-git-commit-history/</guid>
      <description>Any article you read online about maintaining a clean project will mention a version control system (usually git) and will then talk about maintaining a clean commit history through atomic commits, meaningful commit messages and so on.
This article wont go into all the techniques above, instead Im going to focus on a single technique that I have recently learned: Interactive Rebase.
No matter how hard we try to keep our commit messages clean and clear, we often end up with something looking like this:</description>
    </item>
    
  </channel>
</rss>
